#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/Kron/.Kron" ]; then
	KronD_DEFAULT_DATADIR="/var/lib/Kron/.Kron"
else
	KronD_DEFAULT_DATADIR="/var/lib/Krond"
fi

KronD_CONFIGFILE=${KronD_CONFIGFILE:-/etc/Kron/Kron.conf}
KronD_PIDDIR=${KronD_PIDDIR:-/var/run/Krond}
KronD_PIDFILE=${KronD_PIDFILE:-${KronD_PIDDIR}/Krond.pid}
KronD_DATADIR=${KronD_DATADIR:-${KronD_DEFAULT_DATADIR}}
KronD_USER=${KronD_USER:-${Kron_USER:-Kron}}
KronD_GROUP=${KronD_GROUP:-Kron}
KronD_BIN=${KronD_BIN:-/usr/bin/Krond}
KronD_NICE=${KronD_NICE:-${NICELEVEL:-0}}
KronD_OPTS="${KronD_OPTS:-${Kron_OPTS}}"

name="Kron Core Daemon"
description="Kron cryptocurrency P2P network daemon"

command="/usr/bin/Krond"
command_args="-pid=\"${KronD_PIDFILE}\" \
		-conf=\"${KronD_CONFIGFILE}\" \
		-datadir=\"${KronD_DATADIR}\" \
		-daemon \
		${KronD_OPTS}"

required_files="${KronD_CONFIGFILE}"
start_stop_daemon_args="-u ${KronD_USER} \
			-N ${KronD_NICE} -w 2000"
pidfile="${KronD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${KronD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${KronD_USER}:${KronD_GROUP}" \
	"${KronD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${KronD_USER}:${KronD_GROUP}" \
	"${KronD_PIDDIR}"

	checkpath -f \
	-o ${KronD_USER}:${KronD_GROUP} \
	-m 0660 \
	${KronD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${KronD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run Krond."
		eerror "The setting must appear in ${KronD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Kron Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
